diff --git a/chrome/tools/build/win/create_installer_archive.py b/chrome/tools/build/win/create_installer_archive.py
index ffbf9ec0727b9a81eb4b8488ae67b797ec81a437..444a2a1bf4776f7db7f209d8a7b7ab8d55b54bb7 100755
--- a/chrome/tools/build/win/create_installer_archive.py
+++ b/chrome/tools/build/win/create_installer_archive.py
@@ -42,6 +42,7 @@ SETUP_PATCH_FILE_PREFIX = "setup_patch"
 TEMP_ARCHIVE_DIR = "temp_installer_archive"
 VERSION_FILE = "VERSION"
 
+from create_installer_archive_helper import SignAndCopyPreSignedBinaries, BraveCopyAllFilesToStagingDir
 
 g_archive_inputs = []
 
@@ -112,6 +113,7 @@ def CopyAllFilesToStagingDir(config, distribution, staging_dir, build_dir,
   if enable_hidpi == '1':
     CopySectionFilesToStagingDir(config, 'HIDPI', staging_dir, build_dir,
                                  verbose)
+  BraveCopyAllFilesToStagingDir(config, staging_dir, g_archive_inputs)
 
   if include_snapshotblob == '1':
     CopySectionFilesToStagingDir(config, 'SNAPSHOTBLOB', staging_dir, build_dir,
@@ -155,7 +157,7 @@ def CopySectionFilesToStagingDir(config, section, staging_dir, src_dir,
 
 def GenerateDiffPatch(options, orig_file, new_file, patch_file):
   if (options.diff_algorithm == "COURGETTE"):
-    exe_file = os.path.join(options.last_chrome_installer, COURGETTE_EXEC)
+    exe_file = os.path.join(options.build_dir, COURGETTE_EXEC)
     cmd = '%s -gen "%s" "%s" "%s"' % (exe_file, orig_file, new_file, patch_file)
   else:
     exe_file = os.path.join(options.build_dir, BSDIFF_EXEC)
@@ -179,7 +181,7 @@ def GetPrevVersion(build_dir, temp_dir, last_chrome_installer, output_name):
                                    output_name + ARCHIVE_SUFFIX)
   cmd = [lzma_exec,
          'x',
-         '-o"%s"' % temp_dir,
+         '-o%s' % temp_dir,
          prev_archive_file,
          'Chrome-bin/*/chrome.dll',]
   RunSystemCommand(cmd, options.verbose)
@@ -551,6 +553,7 @@ def main(options):
   if prev_version:
     version_numbers = prev_version.split('.')
     prev_build_number = version_numbers[2] + '.' + version_numbers[3]
+  SignAndCopyPreSignedBinaries(options.skip_signing, options.output_dir, staging_dir, current_version)
 
   # Name of the archive file built (for example - chrome.7z or
   # patch-<old_version>-<new_version>.7z or patch-<new_version>.7z
@@ -622,6 +625,7 @@ def _ParseOptions():
            'with the installer archive {x86|x64}.')
   parser.add_option('-v', '--verbose', action='store_true', dest='verbose',
                     default=False)
+  parser.add_option('--skip_signing', default=False)
 
   options, _ = parser.parse_args()
   if not options.build_dir:
